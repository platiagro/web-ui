# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Web UI - CI

on:
  push:
    branches:
    - master
    - v*-branch

  pull_request:
    branches:
    - master
    - v*-branch

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - name: Checkout üõéÔ∏è
      uses: actions/checkout@v2

    - name: Set output variables
      id: vars
      run: |
        CODE_REVIEW=$(cat ./CODE-REVIEW.md)
        echo ::set-output name=CODE_REVIEW::${CODE_REVIEW}

        VERSION=$(node -p "require('./package.json').version")
        if [ ${{ github.ref }} = "refs/heads/master" ]; then
          echo ::set-output name=TAG::${VERSION}-SNAPSHOT
        elif [[ ${{ github.ref }} =~ ^refs/heads/v.*-branch$ ]]; then
          echo ::set-output name=TAG::${VERSION}
        else
          echo ::set-output name=TAG::${VERSION}-${{ github.sha }}
        fi

        echo ::set-output name=BRANCH::${{ github.ref }}
        echo ::set-output name=COMMIT::${{ github.sha }}

    - name: Code review tips
      uses: unsplash/comment-on-pr@master
      if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        msg: ${{ steps.vars.outputs.CODE_REVIEW }}

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        yarn

    - name: Uses .env.production
      run: |
        mv .env.production .env

    - name: Perform tests
      run: |
        yarn build
        yarn test:ci

    - name: SonarCloud Scan
      if: ${{ always() }}
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push docker image üì¶
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: docker.io/platiagro/web-ui:${{ steps.vars.outputs.TAG }}
        build-args: |
          COMMIT=${{ steps.vars.outputs.COMMIT }}
          BRANCH=${{ steps.vars.outputs.BRANCH }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
