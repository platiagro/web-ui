# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Code review tips
        uses: unsplash/comment-on-pr@master
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: |
            ## Dicas para revis√£o de c√≥digo

            ### Commits
            - T√≠tulo (1a linha do commit): apresentar resumo do que foi alterado/adicionado/removido.
              ex: adiciona action que salva parametros no backend; exibe r√≥tulo no componente de selecao de dataset;
            - Descri√ß√£o (outras linhas): dar mais detalhes de cada altera√ß√£o:
              - motivos das altera√ß√µes
                ex: havia um bug que causava...; nova funcionalidade que faz isso...; c√≥digo foi movido para...;
              - bibliotecas adicionadas e vers√µes (package.json)
                ex: atualiza para antd v4.6;
              - testes unit√°rios criados/alterados
                ex: adiciona testes para a action fetchProjectSuccess;
            - Mensagens auto-explicativas! Quem revisa o c√≥digo deve entender o que foi feito (e porque foi feito) **sem perguntar para quem fez o commit**.
            - N√£o devem ter conflitos. Solicitar que sejam resolvidas as ocorr√™ncias de "This branch has conflicts that must be resolved".

            ### SonarCloud Quality Gate
            - Coverage > 80.0%, e sempre que poss√≠vel = 100%
            - 0 Bugs, 0 Code Smells, 0 Vulnerabilities
            - S√£o permitidos os seguintes Security Hotspots:
              - Make sure that using this pseudorandom number generator is safe here.
              - Make sure that using a regular expression is safe here.

            ### Build Github actions COM SUCESSO

            ### ReactJS
            - Usar Node 12 ou 14.
            - Remover `console.log`.
            - N√£o deixar c√≥digo-fonte comentado.

            ### Redux
            As instru√ß√µes a seguir foram retiradas do [Redux Style Guide](https://redux.js.org/style-guide/style-guide).
            - [Sempre retorne o `newState` no reducer. Outros valores ir√£o causar problemas inesperados.](https://redux.js.org/basics/reducers)
              ex: `return message.error(error);` **(ERRADO)**
            - [**N√ÉO fa√ßa atribui√ß√µes de valores no `state`.** Crie e retorne um `newState`.](https://redux.js.org/recipes/structuring-reducers/immutable-update-patterns#updating-nested-objects)
              ex: `state.data = action.data; return state;` **(ERRADO)**
            - [No reducer use apenas o state e o action. N√£o dispare a√ß√µes ou fun√ß√µes ass√≠ncronas.](https://redux.js.org/style-guide/style-guide#reducers-must-not-have-side-effects)
            - [No `state`, armazene tipos simples (`int`, `String`, ...), `Array` e plain `Object`. **N√ÉO armazene `function`, `Promise`, `class instances`.**](https://redux.js.org/style-guide/style-guide#do-not-put-non-serializable-values-in-state-or-actions)
            - [Evite `arrays` aninhados no estado. Prefira armazen√°-los numa "forma normalizada".](https://redux.js.org/recipes/structuring-reducers/normalizing-state-shape)
            - [Nomeie as `actions` como "eventos", n√£o como "setters".](https://redux.js.org/style-guide/style-guide#model-actions-as-events-not-setters)
              ex: `SET_TASK_NAME` `SET_TASK_DESCRIPTION` **(ERRADO)**. `TASK_DETAILS_EDITED` **(CORRETO)**.
            - [Utilize nomes auto-explicativos para as actions. Evite nomes como `SET_DATA` e `UPDATE_DATA`.](https://redux.js.org/style-guide/style-guide#write-meaningful-action-names)
      - name: Set output variables
        id: vars
        run: |
          echo ${{ github.ref }}
          if [ ${{ github.ref }} = "refs/heads/master" ]; then
            echo ::set-output name=TAG::0.2.0
          else
            echo ::set-output name=TAG::0.2.0-SNAPSHOT
          fi
          echo ::set-output name=BRANCH::${{ github.ref }}
          echo ::set-output name=COMMIT::${{ github.sha }}
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: |
          yarn
      - name: Perform tests
        run: |
          yarn build
          yarn test:ci
        env:
          CI: false
      - name: SonarCloud Scan
        if: ${{ always() }}
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Build and push image (NO AUTH) üì¶
        if: ${{ always() }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: registry.hub.docker.com
          repository: platiagro/web-ui
          tags: ${{ steps.vars.outputs.TAG }}
          build_args: COMMIT=${{ steps.vars.outputs.COMMIT }},BRANCH=${{ steps.vars.outputs.BRANCH }}
      - name: Build and push image (AUTH) üì¶
        if: ${{ always() }}
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: registry.hub.docker.com
          repository: platiagro/web-ui
          tags: ${{ steps.vars.outputs.TAG }}-AUTH
          build_args: auth=true,COMMIT=${{ steps.vars.outputs.COMMIT }},BRANCH=${{ steps.vars.outputs.BRANCH }}
